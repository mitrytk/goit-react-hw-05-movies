{"version":3,"file":"static/js/937.737a9c4d.chunk.js","mappings":"qKACA,MAAuB,wBCAvB,EAAuB,wBAAvB,EAAsD,wBAAtD,EAAwF,2BAAxF,EAA+H,6B,eCyC/H,IACA,EAAe,IAA0B,0D,SCPzC,EA/BkB,SAAC,GAA0C,IAAxCA,EAAuC,EAAvCA,GAAIC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAC9C,OACE,eAAIC,UAAWC,EAAf,UACE,UAAC,KAAD,CACED,UAAWC,EACXC,GAAI,YAAAL,EAASM,SAAT,UAAqCP,GAArC,kBAAuDA,GAC3DQ,MAAO,CAAEC,KAAMR,GAHjB,WAKE,gBACEG,UAAWC,EACXK,IACER,EAAW,yCAC2BA,GAClCS,EAENC,IAAKT,EACLU,MAAM,SAER,cAAGT,UAAWC,EAAd,SAAgCF,QAIvC,ECAD,EAtBkB,SAAC,GAAwB,IAAvBW,EAAsB,EAAtBA,OAAQb,EAAc,EAAdA,SAE1B,OACE,eAAIG,UAAWC,EAAf,SACGS,EAAOC,KAAI,gBAAGf,EAAH,EAAGA,GAAIG,EAAP,EAAOA,MAAOD,EAAd,EAAcA,YAAd,OACV,SAAC,EAAD,CAEEF,GAAE,UAAKA,GACPG,MAAOA,EACPD,YAAaA,EACbD,SAAUA,GAJLD,EAFG,KAWjB,C,mHCnBD,EAA0B,wB,0BCA1B,GAAgB,KAAO,wBAAwB,MAAQ,yBAAyB,OAAS,2B,SCoCzF,EAjCkB,SAAC,GAAgB,IAAfgB,EAAc,EAAdA,SAChB,GAA6BC,EAAAA,EAAAA,UAAS,IAAtC,eAAQC,EAAR,KAAgBC,EAAhB,KAMMC,EAAgB,SAAAC,GAClBA,EAAEC,iBAEFN,EAASE,EAAOK,QAChBJ,EAAU,GACb,EAEH,OACE,kBAAMf,UAAWC,EAAAA,KAAYW,SAAUI,EAAvC,WACE,kBAAOhB,UAAWC,EAAAA,MAAlB,UACE,kBACAD,UAAWC,EAAAA,MACTmB,KAAK,OACLC,MAAOP,EACPQ,SAlBgB,SAAAL,GAClBF,EAAUE,EAAEM,OAAOF,MACtB,OAmBC,mBAAQrB,UAAWC,EAAAA,OAAcmB,KAAK,SAAQR,SAAUI,EAAxD,sBAGL,ECcD,EAlCe,WAAO,IAAD,EACnB,GAAwCQ,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMhB,GAASiB,EAAAA,EAAAA,KAAY,SAAAvB,GAAK,OAAIA,EAAMM,MAAV,IAC1BkB,EAAK,UAAGH,EAAaI,IAAI,gBAApB,QAAgC,GAErCC,GAAUC,EAAAA,EAAAA,MACVlC,GAAWmC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WACHL,GAILM,EAAAA,EAAAA,kBAAsBN,EAAMT,QAAQgB,MAAK,SAAAC,GACvCN,GAAQO,EAAAA,EAAAA,GAAaD,EAAKE,SAC3B,GACF,GAAE,CAACV,EAAOE,IAMX,OACE,qBAAS9B,UAAWC,EAApB,WACE,SAAC,EAAD,CAAWW,SANE,SAAAE,GACfY,EAAgB,CAAEE,MAAOd,GAC1B,IAMIc,GACC,SAACW,EAAA,EAAD,CAAW7B,OAAQA,EAAQb,SAAUA,KAErC,0BAIP,C,sDC3CM,IAAMwC,EAAe,SAAA3B,GAC1B,MAAO,CACLU,KAAM,sBACNoB,QAAS,CAAE9B,OAAQA,GAEtB,C","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/movieList.module.scss?6233","webpack://goit-react-hw-05-movies/./src/components/MovieItem/movieItem.module.scss?3516","img/movie.svg","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movies/movies.module.scss?f3fb","webpack://goit-react-hw-05-movies/./src/components/SearchBar/searchBar.module.scss?b829","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","redux/actions.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"movieList_list__naDxc\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"movieItem_item__zMygf\",\"link\":\"movieItem_link__LQtRh\",\"itemImg\":\"movieItem_itemImg__pWgkl\",\"nameMovie\":\"movieItem_nameMovie__0Itfr\"};","var _defs, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMovie(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"800px\",\n    height: \"800px\",\n    viewBox: \"-0.5 0 17 17\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    className: \"si-glyph si-glyph-film\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"780\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null)), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    stroke: \"none\",\n    strokeWidth: 1,\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15,1 L14.012085,1 L14.012085,2 L11.9954016,2 L11.9954016,1 L4.10116386,1 L4.10116386,2 L1.90127892,2 L1.90127892,1 L1,1 L1,17 L1.90127892,17 L1.90127892,16 L3.95410156,16 L3.95410156,17 L11.9954016,17 L11.9954016,16 L14.012085,16 L14.012085,17 L15,17 L15,1 L15,1 Z M4,14 L2,14 L2,12 L4,12 L4,14 L4,14 Z M4,10 L2,10 L2,8 L4,8 L4,10 L4,10 Z M4,6 L2,6 L2,4 L4,4 L4,6 L4,6 Z M11,15 L5,15 L5,10 L11,10 L11,15 L11,15 Z M11,8 L5,8 L5,3 L11,3 L11,8 L11,8 Z M14,14 L12,14 L12,12 L14,12 L14,14 L14,14 Z M14,10 L12,10 L12,8 L14,8 L14,10 L14,10 Z M12,6 L12,4 L14,4 L14,6 L12,6 Z\",\n    fill: \"#434343\",\n    className: \"si-glyph-fill\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMovie);\nexport default __webpack_public_path__ + \"static/media/movie.b922586871b051be1fc1a1985f4adbbb.svg\";\nexport { ForwardRef as ReactComponent };","import style from './movieItem.module.scss';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport movieImg from 'img/movie.svg';\n\nconst MovieItem = ({ id, location, poster_path, title }) => {\n  return (\n    <li className={style.item}>\n      <Link\n        className={style.link}\n        to={location.pathname === `/movies` ? `${id}` : `/movies/${id}`}\n        state={{ from: location }}\n      >\n        <img\n          className={style.itemImg}\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\n              : movieImg\n          }\n          alt={title}\n          width=\"180\"\n        />\n        <p className={style.nameMovie}>{title}</p>\n      </Link>\n    </li>\n  );\n};\n\nMovieItem.propTypes = {\n  id: PropTypes.string,\n  location: PropTypes.object,\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n};\n\nexport default MovieItem;\n","import style from './movieList.module.scss';\nimport PropTypes from 'prop-types';\nimport MovieItem from 'components/MovieItem/MovieItem';\n\n\nconst MovieList = ({movies, location}) => {\n\n  return (\n    <ul className={style.list}>\n      {movies.map(({ id, title, poster_path }) => (\n        <MovieItem\n          key={id}\n          id={`${id}`}\n          title={title}\n          poster_path={poster_path}\n          location={location}\n        />\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n    movies: PropTypes.array,\n    location: PropTypes.object,\n}\n\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"movies_section__iGqBO\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"searchBar_form__59bCu\",\"input\":\"searchBar_input__Xk--B\",\"button\":\"searchBar_button__4Nwgn\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport style from './searchBar.module.scss';\n\nconst SearchBar = ({onSubmit}) => {\n    const [ search, setSearch] = useState('');\n\n    const heandleChange = e => {\n        setSearch(e.target.value);\n    };\n\n    const heandleSubmit = e => {\n        e.preventDefault();\n    \n        onSubmit(search.trim());\n        setSearch('');\n    };\n\n  return (\n    <form className={style.form} onSubmit={heandleSubmit}>\n      <label className={style.label}>\n        <input\n        className={style.input}\n          type=\"text\"\n          value={search}\n          onChange={heandleChange}\n        />\n      </label>\n      <button className={style.button} type='submit'onSubmit={heandleSubmit}>Search</button>\n    </form>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func,\n}\n\nexport default SearchBar;\n","import { useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport style from './movies.module.scss';\n\nimport api from 'services/movies-api';\nimport { updateMovies } from 'redux/actions';\n\nimport MovieList from 'components/MovieList/MovieList';\nimport SearchBar from 'components/SearchBar/SearchBar';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const movies = useSelector(state => state.movies)\n  const query = searchParams.get('query') ?? '';\n\n  const dispath = useDispatch();\n  const location = useLocation();\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    api.fetchSearchMovies(query.trim()).then(data => {\n      dispath(updateMovies(data.results));\n    });\n  }, [query, dispath]);\n\n  const onSubmit = search => {\n    setSearchParams({ query: search });\n  };\n\n  return (\n    <section className={style.section}>\n      <SearchBar onSubmit={onSubmit} />\n\n      {query ? (\n        <MovieList movies={movies} location={location} />\n      ) : (\n        <></>\n      )}\n    </section>\n  );\n};\n\nexport default Movies;\n","export const updateMovies = movies => {\n  return {\n    type: 'movies/updateMovies',\n    payload: { movies: movies },\n  };\n};\n"],"names":["id","location","poster_path","title","className","style","to","pathname","state","from","src","movieImg","alt","width","movies","map","onSubmit","useState","search","setSearch","heandleSubmit","e","preventDefault","trim","type","value","onChange","target","useSearchParams","searchParams","setSearchParams","useSelector","query","get","dispath","useDispatch","useLocation","useEffect","api","then","data","updateMovies","results","MovieList","payload"],"sourceRoot":""}